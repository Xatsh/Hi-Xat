---

interface Props {
	id?: string
}

const { id = "theme-toggle" } = Astro.props
---


<button aria-label="Theme Toggle" class="size-10 flex items-center justify-center rounded-full text-2xl" id={id}>
	<span class="i-mingcute-sun-line dark:i-mingcute-moon-line"></span>
</button>

<script
	define:vars={{
		id,
	}}
	is:inline
>
    const handleToggle = () => {
    const element = document.documentElement
    element.classList.toggle('dark')

    const isDark = element.classList.contains('dark')
    localStorage.setItem('theme', isDark ? 'dark' : 'light')
  }

  const handleToggleClick = () => {
    if (!document.startViewTransition) handleToggle()
    document.startViewTransition(handleToggle)
  }

  document.getElementById(id).addEventListener('click', handleToggleClick)

  document.addEventListener('astro:after-swap', () => {
    if (localStorage.getItem('theme') === 'dark') document.documentElement.classList.toggle('dark', true)

    if (!document.getElementById(id).hasAttribute('onclick')) document.getElementById(id).addEventListener('click', handleToggleClick)
  })
</script>
